# AI Agent Backend - Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# AI MODEL API KEYS
# =============================================================================

# Groq API Key - Get from https://console.groq.com/
# Required for Groq AI models (Llama, Mixtral, etc.)
GROQ_API_KEY=your_groq_api_key_here

# OpenAI API Key - Get from https://platform.openai.com/
# Required for GPT models
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic API Key - Get from https://console.anthropic.com/
# Required for Claude models
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# =============================================================================
# SEARCH API KEYS
# =============================================================================

# SerpAPI Key - Get from https://serpapi.com/
# Primary web search provider
SERP_API_KEY=your_serpapi_key_here

# Brave Search API Key - Get from https://api.search.brave.com/
# Fallback search provider
BRAVE_SEARCH_API_KEY=your_brave_search_key_here

# =============================================================================
# CRYPTOCURRENCY API KEYS
# =============================================================================

# Binance API Keys - Get from https://www.binance.com/en/my/settings/api-management
# Required for cryptocurrency data
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_SECRET_KEY=your_binance_secret_key_here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Configuration
POSTGRES_DB=ai_agent_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_postgres_password_here
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# Full Database URL (automatically constructed if not provided)
# Format: postgresql+asyncpg://user:password@host:port/database
DATABASE_URL=postgresql+asyncpg://postgres:your_secure_postgres_password_here@localhost:5432/ai_agent_db

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Full Redis URL (automatically constructed if not provided)
# Format: redis://[:password@]host:port/db
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret Key - Generate a secure random string (minimum 32 characters)
# Use: openssl rand -hex 32
SECRET_KEY=your_jwt_secret_key_minimum_32_characters_here

# CORS Origins - Comma-separated list of allowed origins
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Logging Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Rate Limiting
RATE_LIMIT_REQUESTS=60
RATE_LIMIT_WINDOW=60

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Next.js Frontend Configuration
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_WS_URL=ws://localhost:8000

# =============================================================================
# DOCKER DEPLOYMENT CONFIGURATION
# =============================================================================

# Port Configuration
BACKEND_PORT=8000
FRONTEND_PORT=3000
NGINX_PORT=80
NGINX_SSL_PORT=443

# Docker Network
DOCKER_NETWORK=ai-agent-network

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Embedding Model Configuration
EMBEDDING_MODEL=snowflake-arctic-embed-m
EMBEDDING_DIMENSION=1024

# Vector Search Configuration
VECTOR_SEARCH_TOP_K=5
VECTOR_SEARCH_THRESHOLD=0.7

# AI Model Configuration
DEFAULT_AI_MODEL=groq/llama-3.1-70b-versatile
MAX_TOKENS=4096
TEMPERATURE=0.7

# External API Timeouts (seconds)
API_TIMEOUT=30
SEARCH_TIMEOUT=10
CRYPTO_TIMEOUT=5

# Cache Configuration
CACHE_TTL=3600
CONVERSATION_CACHE_TTL=86400

# =============================================================================
# PRODUCTION ONLY CONFIGURATION
# =============================================================================

# SSL Configuration (Production only)
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# Domain Configuration (Production only)
DOMAIN=yourdomain.com
WWW_DOMAIN=www.yourdomain.com

# Monitoring Configuration (Production only)
SENTRY_DSN=your_sentry_dsn_here
ANALYTICS_ID=your_analytics_id_here

# =============================================================================
# DEVELOPMENT ONLY CONFIGURATION
# =============================================================================

# Development Features
DEBUG=false
HOT_RELOAD=true
AUTO_RELOAD=true

# Mock API Responses (when API keys are missing)
MOCK_AI_RESPONSES=true
MOCK_SEARCH_RESPONSES=true
MOCK_CRYPTO_RESPONSES=true